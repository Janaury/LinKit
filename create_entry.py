#!/usr/bin/python3
# -*- coding: utf-8 -*-
# Date: Thu Feb 28 17:21:40 2019
# Author: January

import os
import sys
import re

usage = '''create_entry <name> <start_cmd> <icon_path> [-t <type>] [-T <is_in_terminal>]'''
tag = 'Generated by code'
desktop_entry_template='''#{tag}
[Desktop Entry]
Type={type}
Name={name}
Icon={icon_path}
Exec={start_cmd}
Terminal={terminal}
'''

default={
    'type':'Application',
    'terminal':'false'
}

options_map={
    'type':'-t',
    'terminal':'-T'
}

def get_options():
    options = dict()
    option_name = ''
    no_name_options_count = 0
    waiting_for_value = False
    for item in sys.argv[1:]:
        if(item.startswith('-')):
            option_name = item
            waiting_for_value = True
            options[option_name] = ''
        else:
            if waiting_for_value is True:
                options[option_name] = item
            else:
                options[no_name_options_count] = item
                no_name_options_count = no_name_options_count + 1
    # debug info
    # print(sys.argv)
    return options

# 把命令中的路径转换为绝对路径
def abs_start_cmd_path(start_cmd):
    part_start_cmd = re.split(' ', start_cmd, 1)
    if len(part_start_cmd) == 1:
        cmd = part_start_cmd[0]
        arg = ''
    else:
        cmd, arg = part_start_cmd

    if os.path.exists(cmd):
        cmd = os.path.abspath(cmd)

    return cmd + ' ' + arg
    

def get_entry():
    input_options = get_options()
    result_options = dict()
    try:
        result_options['name'] = input_options[0]
        result_options['start_cmd'] = abs_start_cmd_path(input_options[1])
        result_options['icon_path'] = input_options[2]
    except Exception as e:
        print(usage)
        #debug info
        # print(e)
        return

    for option in options_map.keys():
        option_cmd_name = options_map[option]
        if option_cmd_name in input_options.keys():
            result_options[option] = input_options[option_cmd_name]
        else:
            result_options[option] = default[option]
    
    if os.path.exists(result_options['icon_path']) is False:
        print('warning: the icon_path doesn\'t exist')
    else:
        result_options['icon_path'] = os.path.abspath(result_options['icon_path'])


    out_put_content = desktop_entry_template.format(
        tag=tag,
        type=result_options['type'],
        name=result_options['name'],
        icon_path=result_options['icon_path'],
        start_cmd=result_options['start_cmd'],
        terminal=result_options['terminal']
    )

   
    desktop_entry_file = open('./' + result_options['name'] + '.desktop', 'w')
    desktop_entry_file.write(out_put_content)

if __name__ == '__main__':
    get_entry()

    




